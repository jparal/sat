#------------------------------------------------------------------------------
# CAM Config file
#------------------------------------------------------------------------------

# wave = { nperiod = [1]; amp = 0.05; };

simul:
{
  step    = 0.02;
  tmax    = 200;
  start   = 0.;
  restart = false;     # restart app
  momsmooth = 1;       # Steps between moment smooth 
  esmooth   = 1;       # Steps between el. field smooth
};

grid:
{
  cells  = [ 1024, 50, 100 ];        # kc/wp = 0.006 .. 12.6
  resol  = [ 1., 0.5, 1. ];          # [c/omega_p]
  openbc = [ false, false, false ];  # Open Boundary Conditions
};

field:
{
  nsub   = 10;                       # number of sub-steps of B-field
  imf    = { phi = 0.; psi = 0.; };  # orientation of B-field
  dnmin  = 0.005;                    # minimal density to resolve
  resist = 0.01;                     # artificial resistivity
};

plasma:
{
  betae = 0.00055;
  specie:
  {
    cproton = { pcles = 3000.; beta = 1.0; ani = 1.; rmds = .97; qms = 1.;
      v0 = [0.,0.,0.]; }; # Note: J = uc*nc + ub*nb != 0
    bproton = { pcles = 1000.; beta = 0.1; ani = 1.; rmds = .03; qms = 1.;
      v0 = [5.,0.,0.]; };
  };
};

output:
{
  logfile = "bump.log";    # Default: progname.log

  format:
  {
    type = "hdf5"; version = 1; parallel = false;
    compress = { gz = 6; shuffle = true; };   # output compression
    runname = "test";
    dir = "bump";
  };

  dtout = .2;

  sensors:
  {
    density  = { tag = "Dn"; };
    magfield = { tag = "B"; };
    elfield  = { tag = "E"; };
    velocity = { tag = "U"; };
    # temp     = { tag = "T"; };
    # kenergy  = { tag = "KEn"; perpar = true; };
    # dbdt     = { tag = "DbDt"; };
    # jxb      = { tag = "JxB"; };
    # cbxb     = { tag = "CBxB"; };
    #     distfnc  = { tag = "Df"; bins = [21, 21, 21]; perpar = true;
      #       vmin = [-2., -2., -2.]; vmax = [2., 2., 2.]; };
  };
};

parallel:
{
  mpi = { proc = [ 1, 1, 1 ]; };  # ratio of CPU splitting in X,Y,Z dimensions
  omp = { threads = -1; };        # -1 when setup is dynamically
};

sat= { version = [1,0,0]; };
