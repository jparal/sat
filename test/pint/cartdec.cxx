/******************************************************************************
 *   Copyright (C) by Jan Paral and SAT team                                  *
 *   See docs/license/sat file for copying and redistribution conditions.     *
 ******************************************************************************/
/**
 * @file   cartdec.cxx
 * @brief  Cartesian domain decomposition test
 * @author @jparal
 *
 * @revision{1.0}
 * @reventry{2008/06, @jparal}
 * @revmessg{Initial version}
 */

#include "sattest.h"
#include "satpint.h"

// iproc, ipex, ipey, ipez, left1, right1, left2, right2, left3, right3
int cdarray[][10] = {
  {0, 0, 0, 0, 3, 1, 8, 4, 48, 12},
  {1, 1, 0, 0, 0, 2, 9, 5, 49, 13},
  {2, 2, 0, 0, 1, 3, 10, 6, 50, 14},
  {3, 3, 0, 0, 2, 0, 11, 7, 51, 15},
  {4, 0, 1, 0, 7, 5, 0, 8, 52, 16},
  {5, 1, 1, 0, 4, 6, 1, 9, 53, 17},
  {6, 2, 1, 0, 5, 7, 2, 10, 54, 18},
  {7, 3, 1, 0, 6, 4, 3, 11, 55, 19},
  {8, 0, 2, 0, 11, 9, 4, 0, 56, 20},
  {9, 1, 2, 0, 8, 10, 5, 1, 57, 21},
  {10, 2, 2, 0, 9, 11, 6, 2, 58, 22},
  {11, 3, 2, 0, 10, 8, 7, 3, 59, 23},
  {12, 0, 0, 1, 15, 13, 20, 16, 0, 24},
  {13, 1, 0, 1, 12, 14, 21, 17, 1, 25},
  {14, 2, 0, 1, 13, 15, 22, 18, 2, 26},
  {15, 3, 0, 1, 14, 12, 23, 19, 3, 27},
  {16, 0, 1, 1, 19, 17, 12, 20, 4, 28},
  {17, 1, 1, 1, 16, 18, 13, 21, 5, 29},
  {18, 2, 1, 1, 17, 19, 14, 22, 6, 30},
  {19, 3, 1, 1, 18, 16, 15, 23, 7, 31},
  {20, 0, 2, 1, 23, 21, 16, 12, 8, 32},
  {21, 1, 2, 1, 20, 22, 17, 13, 9, 33},
  {22, 2, 2, 1, 21, 23, 18, 14, 10, 34},
  {23, 3, 2, 1, 22, 20, 19, 15, 11, 35},
  {24, 0, 0, 2, 27, 25, 32, 28, 12, 36},
  {25, 1, 0, 2, 24, 26, 33, 29, 13, 37},
  {26, 2, 0, 2, 25, 27, 34, 30, 14, 38},
  {27, 3, 0, 2, 26, 24, 35, 31, 15, 39},
  {28, 0, 1, 2, 31, 29, 24, 32, 16, 40},
  {29, 1, 1, 2, 28, 30, 25, 33, 17, 41},
  {30, 2, 1, 2, 29, 31, 26, 34, 18, 42},
  {31, 3, 1, 2, 30, 28, 27, 35, 19, 43},
  {32, 0, 2, 2, 35, 33, 28, 24, 20, 44},
  {33, 1, 2, 2, 32, 34, 29, 25, 21, 45},
  {34, 2, 2, 2, 33, 35, 30, 26, 22, 46},
  {35, 3, 2, 2, 34, 32, 31, 27, 23, 47},
  {36, 0, 0, 3, 39, 37, 44, 40, 24, 48},
  {37, 1, 0, 3, 36, 38, 45, 41, 25, 49},
  {38, 2, 0, 3, 37, 39, 46, 42, 26, 50},
  {39, 3, 0, 3, 38, 36, 47, 43, 27, 51},
  {40, 0, 1, 3, 43, 41, 36, 44, 28, 52},
  {41, 1, 1, 3, 40, 42, 37, 45, 29, 53},
  {42, 2, 1, 3, 41, 43, 38, 46, 30, 54},
  {43, 3, 1, 3, 42, 40, 39, 47, 31, 55},
  {44, 0, 2, 3, 47, 45, 40, 36, 32, 56},
  {45, 1, 2, 3, 44, 46, 41, 37, 33, 57},
  {46, 2, 2, 3, 45, 47, 42, 38, 34, 58},
  {47, 3, 2, 3, 46, 44, 43, 39, 35, 59},
  {48, 0, 0, 4, 51, 49, 56, 52, 36, 0},
  {49, 1, 0, 4, 48, 50, 57, 53, 37, 1},
  {50, 2, 0, 4, 49, 51, 58, 54, 38, 2},
  {51, 3, 0, 4, 50, 48, 59, 55, 39, 3},
  {52, 0, 1, 4, 55, 53, 48, 56, 40, 4},
  {53, 1, 1, 4, 52, 54, 49, 57, 41, 5},
  {54, 2, 1, 4, 53, 55, 50, 58, 42, 6},
  {55, 3, 1, 4, 54, 52, 51, 59, 43, 7},
  {56, 0, 2, 4, 59, 57, 52, 48, 44, 8},
  {57, 1, 2, 4, 56, 58, 53, 49, 45, 9},
  {58, 2, 2, 4, 57, 59, 54, 50, 46, 10},
  {59, 3, 2, 4, 58, 56, 55, 51, 47, 11}};

SUITE (CartDecompositionSuite)
{
  TEST (InitializeTest)
  {
    CartDomDecomp<3> dec;
    Vector<int,3> ratio (4, 3, 5);
    int max = ratio.Mult ();

    int pe = 0;
    for (int i=0; i<ratio[0]; ++i)
      for (int j=0; j<ratio[1]; ++j)
	for (int k=0; k<ratio[2]; ++k)
	{
	  dec.Initialize (ratio, Mpi::COMM_WORLD, pe, max);
	  CHECK (cdarray[pe][0] == pe);
	  CHECK (cdarray[pe][1] == dec.GetPosition (0));
	  CHECK (cdarray[pe][2] == dec.GetPosition (1));
	  CHECK (cdarray[pe][3] == dec.GetPosition (2));
	  CHECK (cdarray[pe][4] == dec.GetLeft (0));
	  CHECK (cdarray[pe][5] == dec.GetRight (0));
	  CHECK (cdarray[pe][6] == dec.GetLeft (1));
	  CHECK (cdarray[pe][7] == dec.GetRight (1));
	  CHECK (cdarray[pe][8] == dec.GetLeft (2));
	  CHECK (cdarray[pe][9] == dec.GetRight (2));
	  pe++;
	}
  }

  TEST (SplitTest)
  {
    Vector<int,3> ratio (2,1,1);
    int nproc = 128;
    CartDomDecomp<3>::SplitProcessors (ratio,nproc);
  }
}
